name: Test coverage

on:
  push:
    branches: [ "main" ]

jobs:
  coverage_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Generate visual Studio solution
        run: cmake.exe --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -Btarget -G "Visual Studio 17 2022" -T host=x64 -A x64 -DCOVERAGE:BOOL=ON
      - name: Build
        run: cmake.exe --build target --config Debug
      - name: Upload artifacts
        uses: actions/upload-artifact@v3.1.1
        with:
          name: coverage
          path: target\test\Debug\coverage.msvc.xml

  coverage_ubuntu:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Install tools
        run: sudo apt-get install gcovr llvm -y
      - name: Generate Unix Makfiles
        run: cmake --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_BUILD_TYPE:STRING=Debug -DCMAKE_C_COMPILER:FILEPATH=/usr/bin/clang-14 -DCMAKE_CXX_COMPILER:FILEPATH=/usr/bin/clang++-14 -Btarget -G "Unix Makefiles" -DCOVERAGE:BOOL=ON
      - name: Build
        run: cmake --build target --config Debug
      - name: Upload artifacts
        uses: actions/upload-artifact@v3.1.1
        with:
          name: coverage
          path: target/test/coverage.clang.cobertura.xml

  upload_coverage:
    runs-on: ubuntu-22.04
    needs: [coverage_windows, coverage_ubuntu]
    steps:
      - name: Download coverage artifacts
        uses: actions/download-artifact@v3.0.1
        with:
          name: coverage
      - name: Upload to Codecov
        run: | 
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -f coverage.msvc.xml -t ${{secrets.CODECOV_TOKEN}}
      - name: Upload to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          language: 'cpp'
          # coverage-reports: 'coverage.msvc.cobertura.xml, coverage.clang.cobertura.xml'
          coverage-reports: 'coverage.msvc.xml'
        